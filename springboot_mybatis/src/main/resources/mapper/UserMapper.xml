<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.hyd.springboot_mybatis.mapper.UserMapper">
    <resultMap id="BaseResultMap" type="com.hyd.springboot_mybatis.domain.User">
        <!--@Table `spring_learning`.user-->
        <id column="user_id" jdbcType="INTEGER" property="userId"/>
        <result column="nick_name" jdbcType="VARCHAR" property="nickName"/>
        <result column="email" jdbcType="VARCHAR" property="email"/>
        <result column="phone_number" jdbcType="VARCHAR" property="phoneNumber"/>
        <result column="gender" jdbcType="INTEGER" property="gender"/>
        <result column="password" jdbcType="VARCHAR" property="password"/>
    </resultMap>
    <sql id="Base_Column_List">
        user_id,
        nick_name,
        email,
        phone_number,
        gender,
        `password`
    </sql>
    <select id="selectUserList" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from spring_learning.user
    </select>
    <select id="selectUserByNickName" resultMap="BaseResultMap" parameterType="java.lang.String">
        select user_id,nick_name
        from spring_learning.user
        where nick_name= #{nickName,jdbcType=VARCHAR}
    </select>
    <select id="selectUserByPhoneNum" resultMap="BaseResultMap" parameterType="java.lang.String">
        select user_id,phone_number
        from spring_learning.user
        where phone_number= #{phoneNumber,jdbcType=VARCHAR}
    </select>
    <select id="selectUserById" resultMap="BaseResultMap" parameterType="java.lang.Integer">
        select
        <include refid="Base_Column_List"/>
        from spring_learning.user
        where user_id = #{userId,jdbcType=INTEGER}
    </select>
    <insert id="insertUser" keyColumn="user_id" keyProperty="userId"
            parameterType="com.hyd.springboot_mybatis.domain.User" useGeneratedKeys="true">
        insert into spring_learning.user(nick_name, email, phone_number, gender, `password`)
        values (#{nickName,jdbcType=VARCHAR}, #{email,jdbcType=VARCHAR}, #{phoneNumber,jdbcType=VARCHAR},
                #{gender,jdbcType=INTEGER}, #{password,jdbcType=VARCHAR})
    </insert>
    <delete id="deleteUserById" parameterType="java.lang.Integer">
        delete
        from spring_learning.user
        where user_id = #{userId,jdbcType=INTEGER}
    </delete>
    <update id="updateUserById" parameterType="com.hyd.springboot_mybatis.domain.User">
        update spring_learning.user
        <set>
            <if test="nickName != null">
                nick_name=#{nickName,jdbcType=VARCHAR},
            </if>
            <if test="email != null">
                email=#{email,jdbcType=VARCHAR},
            </if>
            <if test="phoneNumber != null">
                phone_number=#{phoneNumber,jdbcType=VARCHAR},
            </if>
            <if test="gender != null">
                gender=#{gender,jdbcType=INTEGER},
            </if>
            <if test="password != null and password!=''">
                `password`=#{password,jdbcType=VARCHAR},
            </if>
        </set>
        where user_id = #{userId,jdbcType=INTEGER}
    </update>
</mapper>